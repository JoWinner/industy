generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  password      String
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  resetToken    String?
  resetTokenExp DateTime?
}

model Shipment {
  id              String    @id @default(cuid())
  trackingNumber  String    @unique
  status          Status    @default(DEPARTED_PORT)
  origin          String
  originPort      Port      @relation("originPort", fields: [originPortId], references: [id])
  originPortId    String
  destination     String
  destPort        Port      @relation("destinationPort", fields: [destPortId], references: [id])
  destPortId      String
  currentLocation String?
  departureDate   DateTime
  arrivalDate     DateTime
  containerNumber String
  route           Json[]    // Array of lat/lng coordinates
  updates         Update[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Update {
  id          String   @id @default(cuid())
  date        DateTime @default(now())
  status      String
  location    String
  description String?
  shipmentId  String
  shipment    Shipment @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
}

model Port {
  id              String     @id @default(cuid())
  name            String
  country         String
  position        Json       // { lat: number, lng: number }
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  originShipments Shipment[] @relation("originPort")
  destShipments   Shipment[] @relation("destinationPort")
}

enum Role {
  USER
  ADMIN
}

enum Status {
  DEPARTED_PORT
  CUSTOMS_CLEARANCE
  ARRIVED_PORT
  PICKED_UP
}